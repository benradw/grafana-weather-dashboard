version: '3'

services:
  influxdb:
    image: influxdb:2.7
    container_name: mon_influxdb
    ports:
      - "8086:8086"
    volumes:
      - influxdb_data:/var/lib/influxdb:rw
    environment:
      - INFLUXDB_ADMIN_USER=admin
      - INFLUXDB_ADMIN_PASSWORD=admin
      - INFLUXDB_BUCKET=weather
      - INFLUXDB_ORG=myorg
      - INFLUXDB_TOKEN=${INFLUX_TOKEN}  # Utilisation du token exporté
    networks:
      - my_network
    restart: always

  telegraf:
    image: telegraf:1.19
    container_name: mon_telegraf
    depends_on:
      - influxdb
    volumes:
      - ./telegraf.conf:/etc/telegraf/telegraf.conf:ro
    environment:
      - INFLUXDB_URL=http://influxdb:8086
      - INFLUXDB_BUCKET=weather
      - INFLUXDB_ORG=myorg
      - INFLUXDB_TOKEN=${INFLUX_TOKEN}  # Utilisation du token exporté
    restart: always
    networks:
      - my_network
    env_file:
      - .env  # Ensure this line is included to load the environment variables

  grafana:
    image: grafana/grafana:latest
    container_name: mon_grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin  # Mot de passe admin pour Grafana
      - GF_SECURITY_ADMIN_USER=admin  # Username for Grafana login (optional)
      - GF_INSTALL_PLUGINS=influxdb
    volumes:
      - grafana_data:/var/lib/grafana
      - ./provisioning:/etc/grafana/provisioning  # Optional: for provisioning datasources and dashboards
    depends_on:
      - influxdb
    restart: always
    networks:
      - my_network
    # Uncomment if you want to automatically configure the Grafana data sources
    # environment:
    #   - GF_DASHBOARDS_JSON_ENABLED=true
    #   - GF_DASHBOARDS_JSON_PATH=/etc/grafana/provisioning/dashboards
    #   - GF_DATASOURCES_INFLUXDB_URL=http://influxdb:8086
    #   - GF_DATASOURCES_INFLUXDB_NAME=myorg
    #   - GF_DATASOURCES_INFLUXDB_TOKEN=${INFLUX_TOKEN}
  
volumes:
  influxdb_data: {}  # Déclaration explicite du volume pour InfluxDB
  grafana_data: {}   # Déclaration explicite du volume pour Grafana

networks:
  my_network:
    driver: bridge
